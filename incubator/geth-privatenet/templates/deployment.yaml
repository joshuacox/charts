apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "geth.fullname" . }}
  labels:
    app: {{ template "geth.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "geth.name" . }}
        release: "{{ .Release.Name }}"
    spec:
      containers:
        - name: {{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["/geth", "--networkid", "{{ .Values.networkId }}", "--syncmode", "{{ .Values.syncMode }}", "--rpc", "--rpcapi", "{{ .Values.rpcApi }}", "--rpcaddr", "0.0.0.0", "--rpcport", "{{ .Values.rpcPort }}", "--ws", "--wsaddr", "0.0.0.0", "--wsport", "{{ .Values.wsPort }}", "--wsapi", "{{ .Values.wsApi }}", "--wsorigins", "{{ .Values.wsOrigins }}", "--gasprice", "{{ .Values.gasPrice }}", "--unlock", "$(cat /node/walletid.txt)", "--password", "/pass/password.txt", "--mine"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.rpcPort }}
            - name: ws
              containerPort: {{ .Values.wsPort }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
      initContainers:
        - name: lsdir-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", "ls /node"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
        - name: catgen-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", "cat /gen/genesis.json"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
        - name: catpass-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", "cat /pass/password.txt"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
        - name: walletinit-{{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["/geth", "--datadir", "/node/", "--password", "/pass/password.txt", "account", "new"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
        - name: lswallet-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", 'ls -Rl /node']
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
        - name: getwallet-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", 'ls /node/keystore | sed "s/.*--\(.*\)$/\1/" > /node/walletid.txt']
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
        - name: blockchainit-{{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["/geth", "--datadir", "/node/", "init", "/gen/genesis.json"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
      volumes:
        - name: config
          configMap:
            name: example-genesis-json
            items:
            - key: genesis.json
              path: genesis.json
        - name: password
          configMap:
            name: walletpassword
            items:
            - key: password.txt
              path: password.txt
        - name: node
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "geth.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
