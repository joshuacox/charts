apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "geth.fullname" . }}
  labels:
    app: {{ template "geth.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "geth.name" . }}
        release: "{{ .Release.Name }}"
    spec:
      containers:
        - name: {{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["sh", "-c", "WALLET_ID=$(cat /node/walletid.txt) /geth --networkid {{ .Values.networkId }} --syncmode {{ .Values.syncMode }} --rpc --rpcapi {{ .Values.rpcApi }} --rpcaddr 0.0.0.0 --rpcport {{ .Values.rpcPort }} --ws --wsaddr 0.0.0.0 --wsport {{ .Values.wsPort }} --wsapi {{ .Values.wsApi }} --wsorigins {{ .Values.wsOrigins }} --gasprice {{ .Values.gasPrice }} --unlock $WALLET_ID --password /pass/password.txt --mine"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.rpcPort }}
            - name: ws
              containerPort: {{ .Values.wsPort }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
      initContainers:
        - name: walletinit-{{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["/geth", "--datadir", "/node/", "--password", "/pass/password.txt", "account", "new"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
        - name: getwallet-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", 'ls /node/keystore | sed "s/.*--\(.*\)$/\1/" > /node/walletid.txt']
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: password
              mountPath: /pass
        - name: startenv-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", "echo", "# env", '>/node/env']
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
        - name: mkenv-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", 'echo "walletID1=$(cat /node/walletid.txt)"> /node/env']
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
        - name: mkgen-{{ template "geth.fullname" . }}
          image: busybox
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: [ "sh", "-c", 'source /node/env; cat /gen/genesis.json.tpl | sed "s/TPL_GASLIMIT_TPL/{{ .Values.gasLimit }}/"| sed "s/TPL_WALLET1_TPL/$walletID1/" | sed "s/TPL_WALLET2_TPL/{{ .Values.walletID2 }}/" | sed "s/TPL_WALLET3_TPL/{{ .Values.walletID3 }}/" | sed "s/TPL_NETWORKID_TPL/{{ .Values.networkId }}/" | tee /node/genesis.json']
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
        - name: blockchainit-{{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["/geth", "--datadir", "/node/", "init", "/node/genesis.json"]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
        - name: catinit-{{ template "geth.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command: ["sh", "-c", "WALLET_PASS=$(cat /pass/password.txt) "]
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          volumeMounts:
            - name:  node
              mountPath: /node
            - name: config
              mountPath: /gen
            - name: password
              mountPath: /pass
      volumes:
        - name: config
          configMap:
            name: example-genesis-json-tpl
            items:
            - key: genesis.json.tpl
              path: genesis.json.tpl
        - name: password
          configMap:
            name: walletpassword
            items:
            - key: password.txt
              path: password.txt
        - name: node
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "geth.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
